//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.11.11 at 02:55:39 PM MEZ 
//


package com.catify.core.process.xml.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * the difference between a process exception and a pipeline exception is, that you may not know the instance inside the pipeline. inside a process you're always knowing the instance - which means you can navigate inside your process (e.g. initiate a compensation).  
 * 
 * <p>Java class for PipelineExceptionEvent complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PipelineExceptionEvent">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute ref="{http://www.catify.com/api/1.0}pipelineExceptionType"/>
 *       &lt;attribute ref="{http://www.catify.com/api/1.0}uri"/>
 *       &lt;attribute ref="{http://www.catify.com/api/1.0}attachPayload"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PipelineExceptionEvent")
public class PipelineExceptionEvent {

    @XmlAttribute(namespace = "http://www.catify.com/api/1.0")
    protected PipelineExceptionType pipelineExceptionType;
    @XmlAttribute(namespace = "http://www.catify.com/api/1.0")
    protected String uri;
    @XmlAttribute(namespace = "http://www.catify.com/api/1.0")
    protected Boolean attachPayload;

    /**
     * put in here the exception type (e.g. CorrelationException)
     * 
     * @return
     *     possible object is
     *     {@link PipelineExceptionType }
     *     
     */
    public PipelineExceptionType getPipelineExceptionType() {
        return pipelineExceptionType;
    }

    /**
     * Sets the value of the pipelineExceptionType property.
     * 
     * @param value
     *     allowed object is
     *     {@link PipelineExceptionType }
     *     
     */
    public void setPipelineExceptionType(PipelineExceptionType value) {
        this.pipelineExceptionType = value;
    }

    /**
     * put in here the uri of your 'dead letter channel' 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUri() {
        return uri;
    }

    /**
     * Sets the value of the uri property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUri(String value) {
        this.uri = value;
    }

    /**
     * set this to true, to send the payload with the message (deafult is true)
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isAttachPayload() {
        if (attachPayload == null) {
            return true;
        } else {
            return attachPayload;
        }
    }

    /**
     * Sets the value of the attachPayload property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAttachPayload(Boolean value) {
        this.attachPayload = value;
    }

}
